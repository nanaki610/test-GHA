name: "infra preview & deploy"

on:
  push:
    branches:
      - main
    paths:
      - 10_infra/**
      - .github/workflows/**
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-northeast-1
  TF_VERSION: 1.1.7
  TF_PROJECT: tastylog
  TD_ENVIROMENT: dev

defaults:
  run:
    shell: bash
    working-directory: "10_infra/"

jobs:
  preview:
    name: "preview"
    runs-on: ubuntu-latest
    outputs:
      TF_PLAN_EXITCODE: ${{steps.plan.outputs.exitcode}}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - name: "Terraform format"
        run: terraform fmt -check
      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION}}
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
      - name: "Terraform init"
        run: terraform init -no-color
      - name: "Terraform validate"
        run: terraform validate -no-color
      - name: "Terraform plan"
        continue-on-error: true
        id: plan
        run: |
          terraform plan \
            -var 'project=${{ env.TF_PROJECT}}' \
            -var 'environment=${{ env.TD_ENVIROMENT}}' \
            -var 'username=${{ secrets.MYSQL_USERNAME}}' \
            -var 'password=${{ secrets.MYSQL_PASSWORD}}' \
            -input=false \
            -no-color \
            -detailed-exitcode
      - name: "Slack Notify"
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: "C078L3NUYRK"
          payload: |
            {
              "attachments": [
                {
                  "blocks": [
                    {
                      "type": "header",
                      "text": {
                        "type": "plain_text",
                        "text": "Request for approve",
                        "emoji": true
                      }
                    },
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}"
                      }
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  deploy:
    name: "deploy"
    needs: "preview"
    if: needs.preview.outputs.TF_PLAN_EXITCODE == 2
    environment: production
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v4
    - name: "Setup Terraform"
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ env.TF_VERSION }}
    - name: "Terraform format"
      run: terraform fmt -check
    - name: "Configure AWS credentials"
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ env.AWS_REGION}}
        role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
    - name: "Terraform init"
      run: terraform init -no-color
    - name: "Terraform apply"
      id: apply
      run: |
        terraform apply \
          -var 'project=${{ env.TF_PROJECT}}' \
          -var 'environment=${{ env.TD_ENVIROMENT}}' \
          -var 'username=${{ secrets.MYSQL_USERNAME}}' \
          -var 'password=${{ secrets.MYSQL_PASSWORD}}' \
          -input=false \
          -no-color \
          -auto-approve
    - name: "Slack Notify"
      if: always()
      uses: slackapi/slack-github-action@v1.26.0
      with:
        channel-id: "C078L3NUYRK"
        payload: |
          {
            "attachments": [
              {
                "blocks": [
                  {
                    "type": "header",
                    "text": {
                      "type": "plain_text",
                      "text": "Runner finished: ${{steps.apply.outcome}}",
                      "emoji": true
                    }
                  },
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}"
                    }
                  }
                ]
              }
            ]
          }
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}